// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CommandTemplate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ares.Core {

  /// <summary>Holder for reflection information generated from CommandTemplate.proto</summary>
  public static partial class CommandTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for CommandTemplate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDb21tYW5kVGVtcGxhdGUucHJvdG8SCWFyZXMuY29yZRoPUGFyYW1ldGVy",
            "LnByb3RvGhVDb21tYW5kTWV0YWRhdGEucHJvdG8ifgoPQ29tbWFuZFRlbXBs",
            "YXRlEiwKCE1ldGFkYXRhGAEgASgLMhouYXJlcy5jb3JlLkNvbW1hbmRNZXRh",
            "ZGF0YRInCglBcmd1bWVudHMYAiADKAsyFC5hcmVzLmNvcmUuUGFyYW1ldGVy",
            "EhQKDFVuaXF1ZUlkVGV4dBgDIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ares.Core.ParameterReflection.Descriptor, global::Ares.Core.CommandMetadataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ares.Core.CommandTemplate), global::Ares.Core.CommandTemplate.Parser, new[]{ "Metadata", "Arguments", "UniqueIdText" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommandTemplate : pb::IMessage<CommandTemplate> {
    private static readonly pb::MessageParser<CommandTemplate> _parser = new pb::MessageParser<CommandTemplate>(() => new CommandTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ares.Core.CommandTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTemplate(CommandTemplate other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      arguments_ = other.arguments_.Clone();
      uniqueIdText_ = other.uniqueIdText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTemplate Clone() {
      return new CommandTemplate(this);
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::Ares.Core.CommandMetadata metadata_;
    /// <summary>
    /// Non-volatile information about the command to be generated for execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ares.Core.CommandMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "Arguments" field.</summary>
    public const int ArgumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ares.Core.Parameter> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(18, global::Ares.Core.Parameter.Parser);
    private readonly pbc::RepeatedField<global::Ares.Core.Parameter> arguments_ = new pbc::RepeatedField<global::Ares.Core.Parameter>();
    /// <summary>
    /// Collection of command parameters/arguments used for generating an executable (device qualified) command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ares.Core.Parameter> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "UniqueIdText" field.</summary>
    public const int UniqueIdTextFieldNumber = 3;
    private string uniqueIdText_ = "";
    /// <summary>
    /// Unique ID in text for use as database primary key, allowing model tracking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueIdText {
      get { return uniqueIdText_; }
      set {
        uniqueIdText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (UniqueIdText != other.UniqueIdText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (UniqueIdText.Length != 0) hash ^= UniqueIdText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (UniqueIdText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UniqueIdText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (UniqueIdText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueIdText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandTemplate other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Ares.Core.CommandMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      arguments_.Add(other.arguments_);
      if (other.UniqueIdText.Length != 0) {
        UniqueIdText = other.UniqueIdText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::Ares.Core.CommandMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 26: {
            UniqueIdText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
