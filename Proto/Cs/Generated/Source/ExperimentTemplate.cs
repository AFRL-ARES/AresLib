// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ExperimentTemplate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ares.Core {

  /// <summary>Holder for reflection information generated from ExperimentTemplate.proto</summary>
  public static partial class ExperimentTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for ExperimentTemplate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExperimentTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhFeHBlcmltZW50VGVtcGxhdGUucHJvdG8SCWFyZXMuY29yZRoSU3RlcFRl",
            "bXBsYXRlLnByb3RvImgKEkV4cGVyaW1lbnRUZW1wbGF0ZRIuCg1TdGVwVGVt",
            "cGxhdGVzGAEgAygLMhcuYXJlcy5jb3JlLlN0ZXBUZW1wbGF0ZRIMCgROYW1l",
            "GAIgASgJEhQKDFVuaXF1ZUlkVGV4dBgDIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ares.Core.StepTemplateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ares.Core.ExperimentTemplate), global::Ares.Core.ExperimentTemplate.Parser, new[]{ "StepTemplates", "Name", "UniqueIdText" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExperimentTemplate : pb::IMessage<ExperimentTemplate> {
    private static readonly pb::MessageParser<ExperimentTemplate> _parser = new pb::MessageParser<ExperimentTemplate>(() => new ExperimentTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperimentTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ares.Core.ExperimentTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentTemplate(ExperimentTemplate other) : this() {
      stepTemplates_ = other.stepTemplates_.Clone();
      name_ = other.name_;
      uniqueIdText_ = other.uniqueIdText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentTemplate Clone() {
      return new ExperimentTemplate(this);
    }

    /// <summary>Field number for the "StepTemplates" field.</summary>
    public const int StepTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ares.Core.StepTemplate> _repeated_stepTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::Ares.Core.StepTemplate.Parser);
    private readonly pbc::RepeatedField<global::Ares.Core.StepTemplate> stepTemplates_ = new pbc::RepeatedField<global::Ares.Core.StepTemplate>();
    /// <summary>
    /// Collection of step templates used to generate executable steps
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ares.Core.StepTemplate> StepTemplates {
      get { return stepTemplates_; }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the experiment, most likely automatically generated relative to the campaign name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UniqueIdText" field.</summary>
    public const int UniqueIdTextFieldNumber = 3;
    private string uniqueIdText_ = "";
    /// <summary>
    /// Unique ID in text for use as database primary key, allowing model tracking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueIdText {
      get { return uniqueIdText_; }
      set {
        uniqueIdText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperimentTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperimentTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stepTemplates_.Equals(other.stepTemplates_)) return false;
      if (Name != other.Name) return false;
      if (UniqueIdText != other.UniqueIdText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stepTemplates_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UniqueIdText.Length != 0) hash ^= UniqueIdText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stepTemplates_.WriteTo(output, _repeated_stepTemplates_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (UniqueIdText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UniqueIdText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stepTemplates_.CalculateSize(_repeated_stepTemplates_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UniqueIdText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueIdText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperimentTemplate other) {
      if (other == null) {
        return;
      }
      stepTemplates_.Add(other.stepTemplates_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UniqueIdText.Length != 0) {
        UniqueIdText = other.UniqueIdText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stepTemplates_.AddEntriesFrom(input, _repeated_stepTemplates_codec);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            UniqueIdText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
